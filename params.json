{"name":"Mesh tinycad","tagline":"a tiny set of unmissable CAD functions ( VTX, XALL ...)","body":"Blender CAD utils\r\n=================\r\n\r\nA tiny subset of unmissable CAD functions for Blender 3d.  \r\nAddon [page on blender.org/wiki](http://wiki.blender.org/index.php/Extensions:2.6/Py/Scripts/Modeling/mesh_tinyCAD) (Which has most of the same info]  \r\n\r\n### Installation\r\n\r\nDownload the [`installable stable release zip` here](https://github.com/zeffii/mesh_tinyCAD/archive/v1_2_4.zip)   \r\n\r\n### Updates: \r\n\r\n  - custom icons disabled\r\n  - addons_contrib version of this addon is now (27-jan-2016) equal to this github release with respect to functionality, \r\n    but this repo's init file has been cleaned up more.\r\n  \r\n__________________\r\n\r\n\r\n### OK, what's this all about?\r\n\r\nDedicated CAD software speeds up drafting significantly with functions like: `Extend`, `Trim`,  `Intersect`, `Fillet /w radius` and `Offset /w distance`. At the moment of this writing many of these functions aren't included by default in regular distributions on Blender.org, so i've coded scripts to perform a few of the main features that I missed most. \r\n  \r\nMy scripts have shortnames: `VTX, V2X, XALL, BIX, CCEN` and are described separately in sections below. `Fillet` and `Offset` are written by zmj100 and can be found [here](http://blenderartists.org/forum/showthread.php?179375).\r\n\r\n\r\nSince I started this repository: Vertex Fillet / Bevel was added to master. So no more need for a separate addon.  (Ctrl+Shift+b)\r\n\r\n### VTX\r\n\r\nThe VTX script has lived in contrib distributions of Blender since 2010, with relatively minor changes. The feedback from BlenderArtists has been [overwhelmingly positive](http://blenderartists.org/forum/showthread.php?204836-CAD-Addon-Edge-Tools-(blender-2-6x)). I'm not going to claim it's bug free, but finding any showstopping issues has proven difficult. It now performs V, T or X selection automatically.   \r\n  \r\nExpect full freedom of orientation, but stuff must really intersect within error margins (`1.5E-6` = tolerance). These kinds of functions are handy for drawing construction lines and fixing up geometry. \r\n\r\n  - V : extending two edges towards their _calculated_ intersection point.  \r\n   ![V](http://i.imgur.com/zBSciFf.png)\r\n\r\n  - T : extending the path of one edge towards another edge.  \r\n   ![T](http://i.imgur.com/CDH5oHm.png)\r\n\r\n  - X : two edges intersect, their intersection gets a weld vertex. You now have 4 edges and 5 vertices.  \r\n   ![X](http://i.imgur.com/kqtX9OE.png)\r\n\r\n\r\n- Select two edges  \r\n- hit `Spacebar` and type `vtx` ..select `autoVTX`  \r\n- Bam. the rest is taken care of.\r\n\r\n\r\n### X ALL\r\n\r\nIntersect all, it programatically goes through all selected edges and slices them all using any found intersections, then welds them.\r\n\r\n  - XALL is fast!  \r\n  ![Imgur](http://i.imgur.com/1I7totI.gif)\r\n  - Select as many edges as you want to intersect.\r\n  - hit `spacebar` and type `xa`  ..select `XALL intersect all edges`\r\n\r\n### V2X (Vertex to Intersection)\r\n\r\nThis might be a niche accessory, but sometimes all you want is a vertex positioned on the intersection of two edges. Nothing fancy.\r\n\r\n### BIX (generate Bisector)\r\n\r\nCreates a single edge which is the bisect of two edges.  \r\n![Imgur](http://i.imgur.com/uzyv1Mv.gif)  \r\n\r\n### CCEN (Circle Centers)\r\n\r\nGiven either \r\n\r\n- two adjacent edges on the circumference of an incomplete circle\r\n- or three vertices (not required to be adjacent)\r\n\r\nthis operator will places the 3d cursor at original center of that circle.\r\n\r\n![imgur](https://cloud.githubusercontent.com/assets/619340/5595657/2786f984-9279-11e4-9dff-9db5d5a52a52.gif)\r\n\r\nupdated version may become a modal operator to generate a full set of circle vertices, with variable vertex count.\r\n\r\n![imgur demo](https://cloud.githubusercontent.com/assets/619340/5602194/ce613c96-933d-11e4-9879-d2cfc686cb69.gif)\r\n  \r\n### E2F (Extend Edge to Selected Face, Edge 2 Face)\r\n\r\nSelect a single Edge and a single Polygon (ngon, tri, quad) within the same Object. Execute `W > TinyCAD > E2F`\r\n\r\n![image](https://cloud.githubusercontent.com/assets/619340/12091278/2884820e-b2f6-11e5-9f1b-37ebfdf10cfc.png)\r\n\r\n\r\n### Why on github?\r\n\r\nThe issue tracker, use it.  \r\n\r\n-  Let me know if these things are broken in new releases. Why? I don't update Blender as often as some so am oblivious to the slow evolution. \r\n-  If you can make a valid argument for extra functionality and it seems like something I might use or be able to implement for fun, it's going to happen.\r\n-  I'm always open to pull requests (just don't expect instant approval of something massive, we can talk..you can use your gift of persuasion and sharp objectivism)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}